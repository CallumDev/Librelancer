//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LibreLancer.Shaders
{
    using System;
    
    public class SunRadial
    {
        private static byte[] vertex_bytes = new byte[362] {
27, 231, 3, 0, 196, 96, 58, 219, 89, 166, 171, 10, 52, 27, 53, 155, 85, 137, 26, 233, 139, 61, 127, 42, 103, 44, 160, 104, 136, 243,
1, 19, 147, 188, 203, 110, 183, 237, 165, 245, 181, 104, 44, 175, 85, 104, 129, 247, 33, 222, 132, 19, 173, 139, 201, 194, 104, 188, 197, 97,
177, 217, 45, 78, 207, 237, 122, 50, 119, 121, 82, 104, 233, 15, 80, 98, 249, 200, 52, 209, 67, 166, 197, 169, 246, 243, 108, 99, 47, 175,
57, 53, 10, 190, 150, 21, 12, 227, 18, 73, 133, 113, 162, 101, 70, 195, 216, 144, 177, 70, 117, 57, 144, 41, 175, 202, 140, 87, 152, 84,
96, 249, 190, 22, 119, 55, 168, 161, 7, 50, 77, 145, 149, 185, 161, 247, 78, 21, 132, 220, 1, 174, 60, 76, 166, 209, 9, 26, 64, 255,
232, 156, 42, 156, 89, 214, 12, 93, 75, 235, 34, 97, 30, 253, 108, 229, 223, 53, 242, 79, 0, 160, 211, 217, 135, 29, 24, 162, 18, 64,
81, 74, 98, 177, 108, 73, 12, 124, 165, 74, 144, 161, 30, 22, 174, 221, 123, 188, 167, 89, 157, 69, 121, 6, 113, 92, 227, 221, 191, 108,
31, 26, 22, 101, 81, 83, 186, 197, 86, 59, 247, 13, 70, 254, 12, 234, 161, 219, 105, 255, 252, 114, 32, 208, 217, 114, 88, 160, 76, 207,
8, 193, 221, 39, 125, 24, 72, 48, 192, 25, 191, 218, 29, 237, 175, 22, 52, 203, 9, 187, 34, 72, 0, 133, 88, 154, 7, 129, 58, 168,
199, 45, 36, 168, 67, 103, 186, 217, 100, 28, 12, 71, 72, 82, 171, 6, 196, 203, 48, 72, 48, 64, 109, 199, 39, 171, 221, 57, 170, 99,
220, 227, 90, 205, 19, 50, 52, 169, 223, 161, 172, 26, 238, 115, 71, 218, 190, 1, 130, 229, 81, 239, 163, 166, 84, 187, 77, 208, 26, 8,
105, 190, 144, 106, 189, 219, 75, 112, 17, 18, 236, 19, 153, 97, 48, 69, 60, 2, 64, 255, 169, 166, 80, 201, 77, 108, 4, 50, 141, 217,
114, 8
};
        private static byte[] fragment_bytes = new byte[240] {
27, 161, 1, 0, 140, 212, 70, 117, 145, 223, 98, 196, 162, 109, 101, 182, 164, 137, 7, 47, 158, 68, 188, 35, 38, 63, 120, 115, 100, 3,
226, 243, 122, 143, 210, 243, 240, 125, 76, 179, 48, 192, 76, 202, 56, 8, 119, 53, 249, 201, 67, 100, 220, 40, 81, 74, 209, 205, 120, 143,
195, 103, 125, 188, 239, 31, 63, 241, 123, 90, 239, 246, 31, 242, 236, 64, 199, 128, 182, 70, 116, 22, 62, 37, 195, 29, 50, 189, 234, 79,
201, 14, 80, 232, 234, 16, 121, 17, 170, 99, 216, 65, 160, 39, 76, 187, 114, 24, 230, 25, 18, 26, 202, 67, 34, 155, 91, 39, 250, 160,
79, 68, 80, 13, 114, 153, 11, 224, 53, 31, 219, 169, 178, 92, 193, 211, 159, 184, 6, 48, 131, 46, 18, 185, 152, 251, 34, 203, 19, 157,
129, 41, 109, 137, 248, 41, 113, 205, 181, 52, 59, 205, 48, 255, 37, 101, 76, 156, 179, 126, 119, 210, 78, 53, 190, 250, 79, 8, 24, 118,
167, 4, 0, 55, 220, 98, 94, 114, 96, 240, 143, 221, 196, 84, 218, 136, 87, 25, 2, 109, 192, 79, 225, 26, 138, 167, 7, 154, 120, 10,
187, 249, 118, 197, 6, 197, 104, 247, 160, 181, 161, 176, 154, 24, 135, 19, 230, 102, 77, 4, 40, 158, 30, 104, 162, 38, 94, 64, 84, 2
};
        static ShaderVariables[] variants;
        private static bool iscompiled = false;
        private static int GetIndex(ShaderFeatures features)
        {
            ShaderFeatures masked = (features & ((ShaderFeatures)(0)));
            return 0;
        }
        public static ShaderVariables Get(ShaderFeatures features)
        {
            return variants[GetIndex(features)];
        }
        public static ShaderVariables Get()
        {
            return variants[0];
        }
        public static void Compile()
        {
            if (iscompiled)
            {
                return;
            }
            iscompiled = true;
            ShaderVariables.Log("Compiling SunRadial");
            string vertsrc;
            string fragsrc;
            vertsrc = ShCompHelper.FromArray(vertex_bytes);
            fragsrc = ShCompHelper.FromArray(fragment_bytes);
            variants = new ShaderVariables[1];
            variants[0] = ShaderVariables.Compile(vertsrc, fragsrc, "");
        }
    }
}
