//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LibreLancer.Shaders
{
    using System;
    
    public class PhysicsDebug
    {
        private static byte[] vertex_bytes = new byte[151] {
27, 249, 0, 64, 140, 196, 56, 134, 242, 16, 229, 147, 84, 35, 105, 7, 243, 202, 187, 146, 46, 78, 106, 114, 158, 155, 248, 196, 211, 3,
11, 12, 2, 172, 21, 180, 2, 10, 52, 106, 113, 224, 233, 1, 224, 186, 49, 44, 134, 126, 167, 28, 68, 208, 5, 241, 9, 139, 32, 201,
130, 170, 78, 99, 199, 15, 18, 112, 120, 26, 81, 130, 39, 124, 141, 189, 130, 175, 241, 246, 24, 63, 181, 124, 104, 44, 80, 25, 198, 208,
0, 206, 207, 7, 213, 116, 107, 231, 154, 173, 36, 43, 86, 63, 182, 15, 245, 163, 98, 70, 165, 156, 216, 166, 193, 132, 167, 168, 54, 73,
193, 31, 136, 249, 80, 159, 39, 30, 6, 146, 10, 73, 33, 237, 41, 72, 4, 250, 200, 136, 149, 120, 145, 210, 128, 184, 104, 128, 165, 190,
4
};
        private static byte[] fragment_bytes = new byte[108] {
27, 125, 0, 0, 140, 212, 78, 117, 17, 183, 213, 72, 218, 209, 57, 222, 9, 157, 14, 203, 34, 218, 127, 107, 171, 134, 154, 28, 48, 255,
225, 239, 35, 107, 11, 196, 11, 115, 27, 251, 94, 21, 113, 68, 208, 46, 206, 152, 221, 206, 53, 39, 178, 226, 146, 20, 174, 102, 90, 57,
136, 61, 145, 129, 19, 94, 125, 203, 227, 176, 213, 35, 185, 250, 237, 232, 159, 214, 22, 96, 62, 15, 91, 164, 136, 206, 156, 120, 77, 242,
208, 240, 3, 229, 30, 40, 225, 176, 213, 35, 185, 250, 237, 232, 31, 176, 28, 6
};
        static ShaderVariables[] variants;
        private static bool iscompiled = false;
        private static int GetIndex(ShaderFeatures features)
        {
            ShaderFeatures masked = (features & ((ShaderFeatures)(0)));
            return 0;
        }
        public static ShaderVariables Get(ShaderFeatures features)
        {
            Compile();
            return variants[GetIndex(features)];
        }
        public static ShaderVariables Get()
        {
            Compile();
            return variants[0];
        }
        public static void Compile()
        {
            if (iscompiled)
            {
                return;
            }
            iscompiled = true;
            ShaderVariables.Log("Compiling PhysicsDebug");
            string vertsrc;
            string fragsrc;
            vertsrc = ShCompHelper.FromArray(vertex_bytes);
            fragsrc = ShCompHelper.FromArray(fragment_bytes);
            variants = new ShaderVariables[1];
            variants[0] = ShaderVariables.Compile(vertsrc, fragsrc, "");
        }
    }
}
