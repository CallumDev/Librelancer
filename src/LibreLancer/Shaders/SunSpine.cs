//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LibreLancer.Shaders
{
    using System;
    
    public class SunSpine
    {
        private static byte[] vertex_bytes = new byte[362] {
27, 231, 3, 0, 196, 96, 58, 219, 89, 166, 171, 10, 52, 27, 53, 155, 85, 137, 26, 233, 139, 61, 127, 42, 103, 44, 160, 104, 136, 243,
1, 19, 147, 188, 203, 110, 183, 237, 165, 245, 181, 104, 44, 175, 85, 104, 129, 247, 33, 222, 132, 19, 173, 139, 201, 194, 104, 188, 197, 97,
177, 217, 45, 78, 207, 237, 122, 50, 119, 121, 82, 104, 233, 15, 80, 98, 249, 200, 52, 209, 67, 166, 197, 169, 246, 243, 108, 99, 47, 175,
57, 53, 10, 190, 150, 21, 12, 227, 18, 73, 133, 113, 162, 101, 70, 195, 216, 144, 177, 70, 117, 57, 144, 41, 175, 202, 140, 87, 152, 84,
96, 249, 190, 22, 119, 55, 168, 161, 7, 50, 77, 145, 149, 185, 161, 247, 78, 21, 132, 220, 1, 174, 60, 76, 166, 209, 9, 26, 64, 255,
232, 156, 42, 156, 89, 214, 12, 93, 75, 235, 34, 97, 30, 253, 108, 229, 223, 53, 242, 79, 0, 160, 211, 217, 135, 29, 24, 162, 18, 64,
81, 74, 98, 177, 108, 73, 12, 124, 165, 74, 144, 161, 30, 22, 174, 221, 123, 188, 167, 89, 157, 69, 121, 6, 113, 92, 227, 221, 191, 108,
31, 26, 22, 101, 81, 83, 186, 197, 86, 59, 247, 13, 70, 254, 12, 234, 161, 219, 105, 255, 252, 114, 32, 208, 217, 114, 88, 160, 76, 207,
8, 193, 221, 39, 125, 24, 72, 48, 192, 25, 191, 218, 29, 237, 175, 22, 52, 203, 9, 187, 34, 72, 0, 133, 88, 154, 7, 129, 58, 168,
199, 45, 36, 168, 67, 103, 186, 217, 100, 28, 12, 71, 72, 82, 171, 6, 196, 203, 48, 72, 48, 64, 109, 199, 39, 171, 221, 57, 170, 99,
220, 227, 90, 205, 19, 50, 52, 169, 223, 161, 172, 26, 238, 115, 71, 218, 190, 1, 130, 229, 81, 239, 163, 166, 84, 187, 77, 208, 26, 8,
105, 190, 144, 106, 189, 219, 75, 112, 17, 18, 236, 19, 153, 97, 48, 69, 60, 2, 64, 255, 169, 166, 80, 201, 77, 108, 4, 50, 141, 217,
114, 8
};
        private static byte[] fragment_bytes = new byte[200] {
27, 60, 1, 32, 196, 224, 231, 125, 222, 43, 233, 246, 141, 4, 184, 15, 146, 229, 142, 240, 129, 248, 111, 191, 181, 126, 79, 1, 71, 191,
168, 22, 37, 97, 26, 88, 42, 101, 233, 54, 81, 188, 244, 45, 202, 77, 162, 168, 43, 43, 87, 113, 143, 227, 119, 115, 122, 28, 158, 127,
230, 119, 222, 236, 15, 95, 82, 54, 53, 91, 194, 144, 220, 140, 100, 17, 158, 252, 209, 30, 161, 148, 14, 102, 68, 179, 17, 75, 194, 8,
81, 28, 237, 4, 154, 109, 75, 62, 165, 169, 155, 156, 40, 100, 145, 40, 71, 159, 83, 118, 170, 228, 100, 71, 53, 218, 104, 120, 147, 20,
132, 26, 6, 36, 99, 112, 19, 22, 230, 97, 228, 75, 13, 248, 216, 145, 220, 156, 17, 234, 79, 137, 63, 136, 90, 16, 98, 1, 142, 15,
26, 131, 222, 20, 93, 68, 113, 47, 107, 162, 133, 81, 111, 150, 172, 227, 77, 201, 22, 153, 199, 209, 97, 105, 105, 131, 235, 218, 225, 88,
117, 32, 106, 65, 152, 61, 248, 134, 5, 149, 161, 5, 222, 148, 108, 145, 153, 128, 189, 13
};
        static ShaderVariables[] variants;
        private static bool iscompiled = false;
        private static int GetIndex(ShaderFeatures features)
        {
            ShaderFeatures masked = (features & ((ShaderFeatures)(0)));
            return 0;
        }
        public static ShaderVariables Get(ShaderFeatures features)
        {
            return variants[GetIndex(features)];
        }
        public static ShaderVariables Get()
        {
            return variants[0];
        }
        public static void Compile()
        {
            if (iscompiled)
            {
                return;
            }
            iscompiled = true;
            ShaderVariables.Log("Compiling SunSpine");
            string vertsrc;
            string fragsrc;
            vertsrc = ShCompHelper.FromArray(vertex_bytes);
            fragsrc = ShCompHelper.FromArray(fragment_bytes);
            variants = new ShaderVariables[1];
            variants[0] = ShaderVariables.Compile(vertsrc, fragsrc, "");
        }
    }
}
