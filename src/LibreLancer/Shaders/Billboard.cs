//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LibreLancer.Shaders
{
    using System;
    
    public class Billboard
    {
        private static byte[] vertex_bytes = new byte[326] {
27, 68, 3, 64, 140, 196, 56, 38, 113, 17, 22, 188, 148, 49, 35, 105, 22, 206, 169, 251, 70, 157, 76, 9, 92, 70, 164, 17, 83, 222,
56, 237, 240, 255, 78, 229, 108, 134, 3, 203, 139, 73, 238, 103, 140, 141, 217, 152, 231, 209, 92, 105, 44, 224, 2, 150, 234, 245, 46, 234,
117, 196, 21, 22, 19, 157, 28, 241, 21, 211, 238, 112, 220, 157, 239, 70, 131, 102, 167, 142, 40, 150, 63, 224, 210, 87, 188, 34, 225, 227,
21, 61, 139, 232, 179, 163, 39, 114, 212, 206, 1, 90, 193, 7, 96, 195, 148, 83, 203, 123, 114, 52, 21, 229, 51, 114, 211, 230, 86, 22,
17, 59, 237, 38, 83, 14, 229, 3, 183, 45, 71, 221, 78, 155, 47, 135, 34, 64, 160, 156, 224, 181, 58, 145, 130, 77, 35, 162, 21, 7,
246, 172, 31, 76, 165, 63, 1, 128, 109, 79, 238, 182, 23, 0, 0, 92, 82, 203, 167, 152, 52, 98, 84, 155, 134, 17, 70, 16, 89, 174,
156, 77, 71, 48, 160, 40, 151, 246, 32, 61, 87, 185, 244, 219, 38, 247, 18, 5, 69, 80, 41, 182, 125, 177, 26, 44, 207, 247, 255, 33,
163, 188, 101, 227, 115, 72, 84, 33, 179, 43, 11, 157, 222, 250, 169, 156, 140, 18, 146, 196, 77, 130, 213, 173, 178, 124, 17, 208, 252, 103,
53, 33, 161, 57, 73, 35, 115, 159, 30, 119, 144, 131, 168, 14, 241, 246, 126, 147, 168, 78, 74, 114, 227, 48, 17, 87, 52, 216, 37, 250,
168, 20, 215, 203, 123, 105, 125, 45, 218, 37, 231, 221, 49, 44, 82, 53, 248, 99, 104, 211, 208, 150, 221, 111, 210, 128, 235, 115, 120, 126,
116, 205, 111, 106, 209, 111, 254, 201, 73, 153, 250, 174, 160, 58, 145, 30, 148, 233, 240, 28, 213, 137, 27, 47, 226, 1
};
        private static byte[] fragment_bytes = new byte[138] {
27, 193, 0, 0, 140, 212, 70, 117, 72, 126, 139, 145, 133, 117, 229, 91, 73, 139, 39, 53, 8, 95, 33, 218, 236, 192, 2, 133, 43, 106,
81, 216, 90, 214, 214, 146, 23, 125, 215, 135, 215, 27, 230, 16, 110, 107, 37, 137, 88, 27, 255, 24, 182, 78, 84, 4, 101, 63, 238, 98,
199, 15, 90, 56, 108, 79, 75, 148, 224, 53, 146, 41, 188, 221, 100, 31, 31, 203, 143, 168, 193, 246, 132, 175, 229, 92, 198, 209, 242, 6,
214, 120, 24, 25, 169, 227, 157, 15, 231, 91, 228, 249, 249, 208, 14, 111, 211, 181, 227, 156, 163, 5, 37, 179, 67, 193, 31, 8, 134, 163,
81, 101, 31, 207, 219, 146, 172, 118, 177, 82, 20, 210, 0, 179, 177, 94, 1, 8
};
        static ShaderVariables[] variants;
        private static bool iscompiled = false;
        private static int GetIndex(ShaderFeatures features)
        {
            ShaderFeatures masked = (features & ((ShaderFeatures)(0)));
            return 0;
        }
        public static ShaderVariables Get(ShaderFeatures features)
        {
            Compile();
            return variants[GetIndex(features)];
        }
        public static ShaderVariables Get()
        {
            Compile();
            return variants[0];
        }
        public static void Compile()
        {
            if (iscompiled)
            {
                return;
            }
            iscompiled = true;
            ShaderVariables.Log("Compiling Billboard");
            string vertsrc;
            string fragsrc;
            vertsrc = ShCompHelper.FromArray(vertex_bytes);
            fragsrc = ShCompHelper.FromArray(fragment_bytes);
            variants = new ShaderVariables[1];
            variants[0] = ShaderVariables.Compile(vertsrc, fragsrc, "");
        }
    }
}
