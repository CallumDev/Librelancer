//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LibreLancer.Shaders
{
    using System;
    
    public class DepthPass_Normal
    {
        private static byte[] vertex_bytes = new byte[151] {
27, 212, 0, 32, 140, 132, 220, 68, 235, 143, 180, 37, 110, 29, 204, 43, 239, 74, 154, 213, 228, 174, 42, 60, 217, 32, 68, 82, 88, 116,
114, 0, 30, 90, 95, 89, 24, 181, 5, 146, 38, 22, 67, 132, 33, 164, 27, 195, 186, 144, 116, 242, 65, 44, 26, 17, 197, 17, 90, 39,
149, 201, 77, 145, 7, 38, 1, 113, 216, 78, 19, 170, 193, 118, 66, 95, 211, 96, 160, 175, 233, 246, 152, 62, 13, 33, 45, 128, 141, 169,
29, 187, 135, 249, 49, 159, 9, 143, 150, 0, 105, 211, 158, 17, 34, 202, 200, 120, 177, 157, 88, 14, 254, 128, 188, 166, 193, 68, 47, 231,
59, 234, 192, 170, 59, 202, 91, 13, 14, 229, 157, 160, 76, 118, 21, 81, 77, 86, 57, 11, 144, 229, 208, 156, 49, 202, 225, 114, 190, 207,
28
};
        private static byte[] fragment_bytes = new byte[86] {
27, 91, 0, 32, 140, 148, 174, 138, 48, 173, 70, 222, 252, 119, 71, 220, 19, 250, 248, 195, 182, 172, 5, 109, 167, 20, 28, 30, 180, 192,
14, 201, 49, 14, 216, 199, 155, 222, 96, 0, 127, 143, 177, 243, 16, 75, 38, 89, 49, 59, 54, 151, 74, 168, 99, 246, 236, 124, 104, 160,
186, 164, 240, 30, 122, 123, 105, 122, 207, 180, 179, 65, 25, 35, 64, 177, 196, 135, 0, 67, 150, 29, 86, 255, 22, 8
};
        static ShaderVariables[] variants;
        private static bool iscompiled = false;
        private static int GetIndex(ShaderFeatures features)
        {
            ShaderFeatures masked = (features & ((ShaderFeatures)(0)));
            return 0;
        }
        public static ShaderVariables Get(ShaderFeatures features)
        {
            return variants[GetIndex(features)];
        }
        public static ShaderVariables Get()
        {
            return variants[0];
        }
        public static void Compile()
        {
            if (iscompiled)
            {
                return;
            }
            iscompiled = true;
            ShaderVariables.Log("Compiling DepthPass_Normal");
            string vertsrc;
            string fragsrc;
            vertsrc = ShCompHelper.FromArray(vertex_bytes);
            fragsrc = ShCompHelper.FromArray(fragment_bytes);
            variants = new ShaderVariables[1];
            variants[0] = ShaderVariables.Compile(vertsrc, fragsrc, "");
        }
    }
}
