//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LibreLancer.Shaders
{
    using System;
    
    public class EnvMapTest
    {
        private static byte[] vertex_bytes = new byte[234] {
27, 174, 1, 0, 44, 10, 108, 99, 216, 232, 135, 24, 70, 217, 203, 66, 102, 148, 226, 105, 49, 62, 219, 254, 162, 45, 77, 39, 231, 23,
250, 118, 144, 67, 160, 25, 36, 81, 109, 165, 196, 182, 50, 43, 105, 17, 179, 102, 18, 33, 113, 84, 209, 119, 233, 176, 50, 182, 55, 157,
178, 131, 52, 53, 137, 164, 176, 252, 220, 241, 42, 1, 72, 239, 106, 237, 107, 81, 98, 45, 139, 62, 139, 142, 48, 161, 40, 204, 33, 243,
22, 25, 145, 244, 89, 237, 110, 54, 41, 250, 20, 20, 198, 145, 77, 86, 23, 183, 95, 162, 101, 168, 249, 183, 133, 106, 190, 28, 29, 190,
188, 61, 230, 79, 139, 96, 189, 69, 197, 47, 120, 192, 121, 31, 82, 49, 195, 8, 57, 237, 153, 34, 18, 95, 243, 200, 195, 253, 196, 159,
196, 172, 87, 144, 125, 189, 245, 128, 156, 138, 175, 60, 181, 37, 115, 219, 126, 60, 224, 170, 64, 122, 62, 16, 225, 15, 225, 229, 232, 242,
242, 157, 1, 69, 178, 68, 217, 167, 149, 20, 88, 114, 98, 160, 87, 149, 150, 110, 65, 88, 107, 159, 74, 92, 192, 183, 243, 64, 50, 32,
248, 32, 202, 37, 41, 45, 244, 251, 95, 237, 210, 3, 224, 16, 194, 12, 175, 12, 147, 106, 118, 156, 38, 14
};
        private static byte[] fragment_bytes = new byte[209] {
27, 77, 1, 0, 44, 10, 108, 247, 20, 19, 68, 139, 221, 149, 33, 54, 97, 164, 52, 20, 124, 227, 199, 114, 228, 44, 237, 104, 93, 125,
75, 154, 120, 82, 3, 220, 193, 55, 160, 25, 71, 250, 231, 65, 30, 72, 62, 224, 217, 104, 169, 0, 226, 146, 117, 110, 98, 83, 55, 249,
233, 1, 125, 110, 126, 27, 13, 140, 39, 96, 23, 197, 145, 70, 26, 212, 54, 135, 173, 65, 202, 127, 188, 34, 105, 202, 192, 248, 7, 188,
202, 244, 83, 55, 107, 218, 169, 233, 184, 21, 114, 159, 102, 224, 61, 188, 118, 20, 225, 236, 209, 186, 120, 121, 30, 123, 184, 214, 102, 150,
157, 61, 22, 181, 36, 192, 181, 21, 25, 122, 91, 145, 99, 92, 220, 108, 205, 16, 12, 199, 254, 34, 39, 96, 75, 242, 225, 19, 44, 20,
234, 250, 136, 116, 133, 225, 254, 0, 114, 107, 136, 74, 57, 47, 219, 223, 140, 21, 114, 7, 180, 213, 5, 143, 24, 84, 180, 159, 61, 177,
80, 227, 4, 104, 113, 13, 14, 56, 74, 6, 149, 77, 97, 59, 216, 158, 183, 25, 99, 248, 166, 170, 240, 191, 129, 138, 223, 151, 26
};
        static ShaderVariables[] variants;
        private static bool iscompiled = false;
        private static int GetIndex(ShaderFeatures features)
        {
            ShaderFeatures masked = (features & ((ShaderFeatures)(0)));
            return 0;
        }
        public static ShaderVariables Get(ShaderFeatures features)
        {
            return variants[GetIndex(features)];
        }
        public static ShaderVariables Get()
        {
            return variants[0];
        }
        public static void Compile()
        {
            if (iscompiled)
            {
                return;
            }
            iscompiled = true;
            ShaderVariables.Log("Compiling EnvMapTest");
            string vertsrc;
            string fragsrc;
            vertsrc = ShCompHelper.FromArray(vertex_bytes);
            fragsrc = ShCompHelper.FromArray(fragment_bytes);
            variants = new ShaderVariables[1];
            variants[0] = ShaderVariables.Compile(vertsrc, fragsrc, "");
        }
    }
}
