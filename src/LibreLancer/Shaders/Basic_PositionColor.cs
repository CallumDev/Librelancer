//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LibreLancer.Shaders
{
    using System;
    
    public class Basic_PositionColor
    {
        private static byte[] vertex_bytes = new byte[1860] {
27, 25, 34, 0, 140, 210, 204, 244, 17, 110, 170, 162, 46, 118, 60, 223, 156, 168, 123, 70, 61, 136, 139, 249, 68, 151, 56, 185, 142, 83,
81, 83, 163, 254, 103, 83, 187, 115, 57, 189, 156, 246, 11, 4, 125, 27, 26, 165, 147, 82, 26, 163, 128, 112, 24, 215, 1, 217, 17, 206,
189, 251, 149, 22, 72, 94, 73, 138, 190, 179, 110, 103, 38, 201, 187, 159, 133, 227, 127, 4, 48, 153, 252, 221, 99, 84, 85, 4, 138, 60,
161, 84, 21, 178, 82, 162, 170, 17, 93, 100, 182, 110, 13, 209, 247, 161, 153, 77, 186, 2, 238, 248, 80, 227, 157, 120, 40, 110, 238, 138,
167, 242, 246, 104, 103, 191, 184, 113, 6, 82, 19, 98, 7, 162, 244, 124, 231, 134, 223, 48, 240, 224, 45, 254, 59, 213, 93, 26, 106, 87,
186, 202, 190, 36, 53, 219, 48, 42, 37, 112, 245, 83, 109, 178, 176, 1, 33, 188, 64, 96, 33, 183, 152, 225, 161, 67, 249, 167, 212, 0,
221, 134, 131, 249, 40, 6, 227, 189, 221, 180, 38, 131, 189, 244, 101, 115, 215, 19, 221, 63, 97, 100, 125, 11, 50, 76, 238, 175, 78, 79,
150, 93, 97, 123, 169, 224, 117, 209, 221, 92, 191, 223, 25, 52, 110, 132, 133, 219, 105, 69, 64, 186, 53, 60, 49, 226, 184, 29, 99, 244,
108, 233, 246, 209, 206, 79, 153, 188, 7, 118, 88, 99, 95, 110, 191, 59, 172, 226, 82, 216, 230, 14, 237, 140, 234, 110, 174, 199, 205, 207,
140, 117, 233, 100, 160, 153, 11, 96, 46, 172, 39, 128, 203, 119, 166, 85, 185, 53, 153, 177, 86, 36, 131, 153, 60, 73, 57, 9, 230, 218,
82, 81, 53, 186, 169, 117, 243, 43, 105, 61, 155, 165, 145, 231, 53, 94, 220, 159, 179, 255, 92, 121, 85, 220, 148, 119, 199, 103, 5, 126,
199, 137, 83, 159, 220, 30, 191, 164, 53, 74, 219, 142, 31, 231, 226, 171, 253, 58, 33, 150, 165, 42, 35, 233, 41, 165, 44, 96, 0, 177,
10, 236, 22, 245, 222, 212, 213, 231, 204, 194, 136, 91, 236, 90, 223, 51, 179, 246, 141, 32, 23, 39, 184, 253, 82, 181, 238, 226, 123, 147,
63, 151, 77, 163, 59, 20, 181, 184, 83, 20, 39, 83, 111, 234, 44, 141, 190, 236, 92, 155, 20, 177, 149, 120, 80, 12, 53, 30, 42, 97,
119, 231, 129, 29, 87, 12, 138, 42, 180, 82, 167, 94, 19, 184, 67, 138, 226, 80, 124, 172, 181, 65, 162, 37, 199, 176, 167, 42, 221, 243,
115, 84, 229, 211, 166, 86, 120, 173, 162, 198, 231, 248, 204, 198, 201, 132, 99, 142, 200, 77, 109, 131, 159, 4, 101, 222, 235, 241, 97, 167,
22, 95, 239, 208, 223, 110, 63, 18, 120, 62, 63, 44, 60, 149, 99, 198, 121, 38, 115, 101, 208, 180, 81, 19, 58, 101, 218, 138, 22, 150,
91, 238, 42, 149, 41, 154, 146, 65, 230, 252, 157, 171, 26, 175, 183, 112, 223, 83, 106, 16, 80, 227, 139, 178, 6, 125, 8, 214, 141, 47,
171, 45, 202, 47, 15, 191, 91, 235, 68, 249, 91, 151, 94, 63, 125, 220, 179, 120, 186, 66, 124, 235, 79, 144, 56, 37, 16, 86, 227, 253,
101, 51, 31, 145, 211, 64, 245, 154, 44, 221, 141, 100, 86, 230, 183, 165, 211, 161, 228, 164, 82, 12, 143, 62, 179, 92, 82, 44, 157, 88,
183, 189, 129, 84, 85, 175, 37, 114, 37, 12, 176, 169, 27, 170, 223, 246, 200, 45, 81, 192, 172, 214, 116, 37, 101, 104, 18, 124, 54, 215,
156, 197, 82, 13, 55, 112, 134, 249, 65, 132, 144, 182, 11, 226, 88, 237, 66, 44, 15, 44, 159, 134, 151, 30, 208, 71, 225, 183, 3, 201,
217, 119, 190, 8, 174, 20, 38, 136, 159, 23, 124, 2, 128, 167, 26, 114, 141, 234, 24, 166, 136, 82, 219, 0, 223, 219, 57, 12, 97, 138,
168, 240, 218, 34, 50, 173, 154, 168, 233, 130, 150, 142, 225, 162, 32, 226, 122, 132, 76, 120, 91, 215, 180, 181, 84, 131, 221, 25, 116, 163,
79, 110, 225, 144, 163, 96, 217, 145, 170, 50, 221, 148, 234, 239, 211, 220, 36, 185, 45, 108, 195, 89, 26, 159, 153, 83, 183, 77, 179, 236,
117, 217, 96, 151, 139, 234, 228, 80, 73, 31, 87, 174, 116, 103, 8, 140, 121, 89, 52, 207, 163, 198, 29, 124, 174, 1, 139, 213, 80, 0,
23, 180, 83, 20, 240, 119, 187, 152, 0, 106, 156, 65, 226, 118, 180, 107, 77, 115, 10, 166, 237, 153, 119, 84, 223, 177, 78, 19, 239, 2,
148, 11, 125, 98, 132, 37, 150, 223, 11, 221, 80, 139, 205, 221, 122, 91, 182, 97, 3, 77, 134, 177, 234, 199, 84, 220, 29, 96, 6, 128,
229, 194, 173, 152, 77, 114, 152, 52, 201, 208, 175, 110, 251, 70, 219, 255, 174, 6, 48, 203, 56, 70, 24, 229, 91, 56, 140, 83, 19, 46,
206, 191, 233, 153, 68, 50, 135, 172, 110, 175, 150, 221, 74, 235, 16, 130, 246, 87, 169, 101, 229, 114, 251, 69, 55, 195, 15, 32, 137, 9,
191, 145, 0, 123, 114, 232, 208, 150, 130, 156, 6, 212, 33, 33, 101, 130, 107, 134, 117, 125, 74, 123, 153, 64, 231, 57, 132, 69, 142, 65,
232, 114, 36, 74, 139, 26, 147, 156, 25, 17, 68, 60, 133, 240, 125, 80, 18, 137, 85, 101, 161, 154, 209, 51, 181, 90, 166, 94, 209, 57,
208, 36, 7, 65, 246, 143, 82, 45, 138, 236, 46, 231, 71, 144, 57, 211, 31, 33, 68, 20, 177, 121, 160, 185, 243, 7, 184, 210, 234, 244,
236, 245, 186, 116, 150, 81, 54, 201, 36, 201, 138, 121, 27, 38, 147, 123, 202, 208, 84, 89, 234, 44, 162, 159, 245, 243, 21, 48, 46, 73,
100, 115, 99, 93, 68, 58, 39, 56, 215, 253, 56, 135, 141, 251, 213, 87, 131, 48, 97, 62, 21, 9, 228, 212, 52, 23, 93, 104, 165, 238,
33, 218, 170, 26, 155, 142, 255, 138, 48, 199, 230, 87, 15, 133, 30, 148, 104, 200, 249, 48, 254, 162, 158, 155, 51, 82, 211, 216, 236, 105,
154, 241, 174, 106, 125, 203, 88, 245, 106, 116, 116, 165, 64, 116, 195, 150, 160, 252, 124, 198, 116, 95, 115, 72, 28, 4, 247, 61, 203, 249,
252, 92, 78, 254, 28, 157, 232, 110, 139, 249, 55, 53, 1, 1, 209, 62, 200, 151, 25, 118, 221, 164, 248, 18, 55, 53, 224, 64, 37, 11,
38, 245, 66, 172, 107, 133, 227, 229, 54, 61, 169, 177, 42, 242, 209, 216, 167, 106, 145, 103, 174, 50, 105, 8, 120, 168, 66, 168, 116, 117,
11, 20, 238, 157, 136, 148, 107, 76, 33, 199, 197, 201, 109, 197, 14, 132, 164, 184, 191, 203, 249, 169, 74, 96, 132, 72, 206, 125, 188, 109,
42, 77, 48, 20, 165, 151, 219, 94, 86, 66, 34, 67, 235, 75, 61, 82, 221, 216, 46, 57, 184, 217, 57, 60, 47, 46, 238, 174, 7, 247,
236, 116, 67, 87, 153, 165, 217, 118, 85, 113, 151, 2, 93, 80, 63, 2, 163, 45, 215, 26, 67, 148, 67, 26, 4, 167, 152, 242, 170, 167,
209, 86, 87, 112, 249, 172, 47, 218, 111, 61, 178, 50, 157, 144, 62, 184, 84, 53, 67, 240, 38, 247, 214, 144, 126, 48, 33, 96, 138, 157,
121, 175, 135, 186, 47, 208, 225, 161, 211, 5, 232, 188, 246, 67, 34, 77, 135, 196, 67, 138, 109, 240, 208, 60, 165, 32, 172, 162, 193, 250,
171, 80, 158, 249, 69, 36, 204, 251, 208, 110, 246, 185, 176, 41, 102, 118, 147, 79, 152, 229, 107, 169, 3, 134, 162, 237, 81, 204, 5, 160,
76, 249, 123, 92, 63, 67, 215, 170, 51, 217, 159, 255, 122, 7, 210, 243, 188, 250, 76, 199, 98, 213, 200, 45, 105, 113, 174, 6, 133, 97,
2, 6, 148, 163, 131, 226, 207, 105, 128, 103, 72, 202, 169, 237, 190, 97, 205, 3, 173, 193, 143, 99, 239, 180, 53, 203, 78, 95, 89, 124,
14, 183, 233, 72, 92, 45, 131, 55, 87, 183, 32, 95, 141, 229, 192, 144, 158, 26, 219, 94, 44, 137, 189, 252, 203, 83, 74, 254, 106, 116,
118, 255, 39, 243, 218, 190, 239, 168, 227, 245, 19, 245, 122, 61, 209, 113, 221, 112, 74, 107, 53, 218, 54, 249, 171, 243, 69, 32, 24, 100,
55, 43, 56, 227, 114, 225, 15, 164, 209, 164, 60, 232, 212, 104, 239, 204, 187, 58, 176, 3, 19, 8, 207, 48, 237, 68, 31, 239, 67, 98,
230, 135, 45, 241, 31, 238, 189, 58, 164, 126, 81, 240, 42, 72, 60, 28, 95, 75, 18, 37, 189, 244, 85, 22, 149, 54, 89, 77, 72, 26,
155, 114, 227, 251, 38, 12, 117, 62, 104, 121, 245, 99, 193, 138, 200, 104, 1, 107, 27, 4, 181, 149, 0, 89, 94, 229, 123, 112, 239, 223,
216, 252, 21, 207, 114, 58, 173, 200, 213, 78, 8, 145, 166, 153, 37, 206, 76, 205, 195, 248, 72, 53, 132, 124, 49, 36, 24, 187, 77, 191,
7, 196, 92, 103, 140, 28, 194, 193, 131, 254, 174, 222, 124, 83, 250, 237, 90, 102, 72, 237, 219, 13, 56, 118, 41, 208, 29, 165, 48, 79,
97, 70, 88, 178, 138, 250, 240, 235, 4, 117, 252, 213, 148, 44, 75, 218, 65, 158, 156, 73, 81, 80, 169, 155, 172, 49, 230, 168, 195, 159,
63, 100, 242, 23, 108, 194, 109, 93, 22, 34, 192, 203, 47, 88, 225, 201, 34, 102, 240, 85, 157, 121, 173, 71, 35, 171, 63, 160, 193, 171,
57, 227, 127, 77, 176, 2, 134, 169, 161, 182, 140, 18, 34, 177, 32, 83, 177, 15, 189, 30, 161, 44, 193, 76, 73, 121, 12, 170, 202, 61,
41, 94, 114, 83, 170, 29, 248, 11, 174, 244, 55, 244, 77, 162, 205, 48, 136, 9, 158, 120, 170, 171, 54, 95, 249, 59, 97, 170, 76, 102,
179, 193, 227, 122, 34, 5, 199, 154, 254, 135, 218, 130, 4, 201, 185, 235, 138, 245, 167, 39, 153, 176, 51, 107, 167, 162, 198, 237, 240, 59,
78, 224, 171, 54, 130, 108, 2, 67, 11, 212, 42, 225, 74, 210, 192, 224, 230, 186, 148, 141, 187, 56, 191, 105, 250, 78, 202, 33, 112, 57,
36, 73, 76, 146, 242, 6, 216, 32, 213, 72, 167, 221, 139, 181, 235, 110, 38, 105, 9, 211, 149, 139, 46, 220, 86, 122, 149, 77, 119, 204,
23, 135, 224, 6, 166, 169, 51, 161, 136, 107, 36, 90, 110, 63, 72, 71, 57, 131, 224, 135, 160, 233, 190, 156, 71, 27, 105, 200, 71, 1
};
        private static byte[] fragment_bytes = new byte[1973] {
27, 113, 35, 0, 140, 194, 182, 237, 177, 8, 51, 197, 137, 154, 248, 131, 106, 78, 210, 89, 163, 6, 226, 98, 134, 232, 114, 78, 182, 112,
42, 234, 213, 19, 43, 83, 245, 143, 207, 107, 243, 202, 129, 2, 171, 228, 20, 33, 112, 37, 221, 170, 18, 215, 132, 3, 131, 160, 204, 81,
161, 135, 132, 108, 72, 249, 191, 57, 203, 118, 123, 36, 89, 10, 180, 102, 63, 204, 188, 77, 218, 102, 33, 155, 28, 96, 122, 188, 76, 127,
102, 210, 46, 112, 122, 196, 138, 64, 145, 39, 212, 234, 164, 68, 117, 70, 220, 99, 180, 204, 143, 92, 156, 146, 130, 246, 186, 48, 155, 49,
239, 63, 188, 221, 59, 186, 40, 46, 39, 229, 221, 241, 94, 94, 220, 178, 137, 214, 137, 148, 233, 152, 19, 32, 149, 24, 78, 249, 98, 239,
161, 252, 17, 130, 59, 238, 240, 147, 37, 1, 7, 163, 249, 176, 102, 132, 131, 88, 42, 21, 72, 92, 21, 207, 139, 24, 230, 33, 132, 151,
136, 60, 84, 145, 114, 60, 116, 49, 247, 45, 88, 67, 39, 56, 108, 167, 163, 50, 206, 227, 118, 27, 50, 225, 43, 95, 213, 147, 158, 219,
254, 1, 35, 247, 105, 145, 97, 96, 127, 125, 122, 242, 252, 0, 43, 168, 188, 231, 160, 123, 5, 108, 253, 229, 208, 184, 44, 11, 87, 110,
165, 64, 186, 61, 6, 164, 136, 125, 246, 156, 179, 203, 85, 70, 72, 183, 123, 198, 236, 111, 228, 215, 27, 236, 171, 203, 187, 195, 218, 217,
16, 86, 225, 161, 229, 81, 221, 133, 245, 184, 235, 70, 218, 186, 244, 162, 161, 133, 11, 96, 42, 204, 37, 129, 155, 247, 22, 133, 187, 239,
18, 99, 182, 140, 6, 51, 57, 162, 242, 25, 166, 218, 107, 100, 50, 187, 174, 108, 141, 159, 82, 249, 210, 209, 48, 241, 188, 131, 151, 191,
47, 216, 127, 169, 188, 46, 110, 203, 201, 201, 121, 129, 173, 52, 99, 249, 114, 247, 248, 77, 174, 81, 218, 50, 254, 179, 193, 87, 121, 122,
81, 134, 5, 198, 72, 234, 22, 104, 11, 104, 64, 44, 20, 79, 202, 220, 135, 58, 127, 21, 45, 92, 131, 7, 135, 253, 189, 116, 243, 113,
4, 57, 81, 113, 247, 166, 43, 219, 141, 248, 13, 124, 93, 213, 181, 237, 144, 249, 10, 44, 115, 14, 164, 222, 85, 163, 97, 242, 141, 232,
18, 69, 194, 167, 245, 32, 99, 42, 60, 84, 194, 223, 223, 6, 118, 82, 49, 200, 188, 80, 111, 93, 116, 153, 195, 157, 165, 12, 135, 157,
167, 74, 27, 36, 218, 112, 2, 123, 145, 177, 61, 63, 67, 85, 121, 91, 208, 7, 222, 81, 153, 249, 62, 63, 183, 102, 46, 48, 86, 31,
93, 151, 63, 248, 101, 81, 198, 60, 159, 28, 117, 250, 253, 237, 47, 244, 247, 251, 127, 25, 6, 188, 254, 243, 24, 96, 24, 75, 246, 205,
91, 237, 80, 215, 90, 253, 58, 237, 26, 67, 129, 205, 94, 184, 74, 56, 68, 229, 210, 193, 217, 159, 141, 130, 125, 191, 71, 240, 158, 98,
189, 136, 154, 12, 202, 173, 213, 147, 183, 169, 142, 69, 105, 209, 124, 117, 244, 243, 91, 23, 203, 191, 195, 244, 220, 195, 243, 125, 139, 135,
107, 164, 199, 182, 12, 25, 139, 64, 88, 176, 183, 149, 117, 59, 37, 167, 129, 2, 183, 84, 186, 27, 201, 204, 230, 247, 75, 167, 67, 201,
89, 199, 176, 157, 126, 173, 185, 146, 12, 237, 95, 53, 189, 131, 162, 240, 158, 77, 228, 26, 56, 224, 161, 174, 169, 124, 91, 165, 74, 34,
143, 91, 237, 208, 208, 60, 52, 0, 33, 126, 76, 5, 87, 31, 171, 185, 129, 51, 140, 141, 18, 196, 88, 255, 78, 28, 163, 0, 196, 230,
200, 243, 57, 112, 177, 93, 252, 52, 252, 150, 33, 219, 185, 118, 87, 66, 64, 140, 16, 196, 205, 11, 190, 36, 192, 51, 173, 199, 212, 186,
99, 24, 16, 165, 100, 141, 144, 215, 203, 112, 196, 49, 86, 133, 103, 135, 200, 16, 51, 215, 139, 119, 10, 237, 37, 72, 162, 68, 232, 17,
115, 233, 109, 39, 22, 141, 167, 18, 236, 238, 168, 155, 190, 10, 11, 199, 2, 10, 62, 127, 230, 162, 108, 240, 159, 226, 118, 82, 60, 148,
63, 185, 185, 45, 138, 107, 220, 3, 103, 229, 124, 102, 84, 213, 212, 245, 170, 183, 101, 21, 222, 44, 211, 236, 161, 156, 222, 167, 252, 176,
157, 35, 48, 225, 101, 233, 60, 143, 170, 123, 240, 185, 3, 64, 48, 119, 14, 48, 160, 76, 73, 36, 222, 197, 92, 2, 29, 199, 18, 10,
247, 88, 179, 177, 180, 197, 48, 201, 215, 118, 84, 222, 137, 102, 148, 108, 2, 120, 114, 145, 12, 194, 34, 75, 124, 243, 228, 174, 169, 193,
118, 213, 222, 62, 95, 234, 64, 68, 53, 99, 110, 217, 180, 76, 14, 176, 0, 160, 124, 97, 22, 204, 42, 58, 214, 42, 25, 90, 218, 201,
39, 154, 254, 175, 55, 128, 73, 38, 49, 226, 100, 188, 230, 161, 143, 158, 11, 210, 241, 143, 65, 83, 204, 182, 144, 213, 157, 102, 213, 125,
88, 29, 98, 208, 227, 102, 106, 120, 179, 42, 191, 56, 201, 241, 31, 144, 196, 68, 30, 73, 128, 85, 99, 208, 161, 46, 5, 57, 53, 168,
65, 194, 150, 8, 166, 25, 230, 12, 41, 173, 230, 18, 93, 166, 16, 102, 57, 1, 193, 249, 200, 46, 45, 106, 76, 114, 86, 69, 16, 235,
75, 140, 208, 7, 109, 34, 137, 162, 44, 214, 75, 122, 186, 84, 171, 210, 157, 156, 3, 77, 82, 11, 170, 125, 20, 52, 40, 118, 119, 185,
124, 2, 149, 50, 109, 9, 98, 136, 34, 86, 15, 180, 117, 249, 53, 2, 105, 85, 124, 221, 102, 78, 218, 217, 81, 22, 200, 37, 201, 165,
178, 14, 179, 147, 123, 198, 152, 133, 246, 212, 88, 68, 63, 107, 19, 59, 226, 66, 146, 212, 230, 198, 178, 136, 116, 46, 10, 174, 89, 2,
14, 91, 8, 139, 175, 3, 196, 54, 252, 121, 106, 80, 82, 211, 92, 56, 211, 90, 154, 135, 100, 171, 8, 219, 142, 255, 154, 216, 19, 247,
181, 135, 70, 15, 74, 52, 236, 233, 208, 247, 178, 106, 221, 57, 74, 211, 250, 205, 139, 105, 41, 154, 170, 73, 195, 185, 160, 170, 117, 52,
165, 32, 116, 197, 150, 160, 220, 124, 122, 117, 111, 45, 20, 28, 44, 238, 123, 169, 32, 228, 103, 114, 114, 167, 104, 255, 160, 120, 111, 63,
169, 10, 240, 136, 118, 173, 144, 196, 240, 55, 85, 138, 43, 114, 65, 107, 28, 40, 100, 193, 164, 78, 136, 249, 188, 112, 42, 223, 86, 38,
53, 22, 69, 46, 26, 25, 73, 144, 99, 43, 212, 138, 64, 14, 94, 216, 10, 93, 174, 129, 226, 131, 51, 70, 101, 26, 211, 146, 226, 214,
155, 89, 139, 213, 132, 162, 152, 29, 224, 252, 84, 36, 8, 66, 36, 103, 198, 160, 76, 165, 8, 198, 50, 122, 153, 245, 101, 8, 133, 12,
181, 47, 181, 72, 185, 178, 181, 119, 110, 107, 247, 242, 178, 205, 154, 145, 79, 155, 101, 109, 4, 251, 245, 118, 125, 245, 24, 156, 245, 130,
218, 24, 198, 61, 108, 157, 224, 128, 43, 207, 45, 141, 164, 50, 8, 248, 204, 45, 235, 111, 217, 179, 162, 70, 200, 25, 4, 104, 179, 65,
240, 58, 245, 102, 145, 126, 112, 67, 192, 128, 239, 100, 171, 135, 154, 47, 208, 224, 161, 151, 43, 0, 141, 215, 54, 40, 200, 210, 33, 241,
144, 226, 113, 12, 160, 237, 16, 1, 101, 166, 33, 218, 171, 144, 159, 229, 222, 74, 88, 182, 161, 205, 228, 51, 97, 3, 110, 118, 157, 78,
152, 228, 179, 169, 1, 134, 162, 173, 210, 220, 5, 32, 79, 185, 91, 92, 63, 67, 211, 234, 184, 230, 237, 31, 124, 160, 50, 207, 219, 239,
98, 22, 139, 48, 182, 164, 143, 93, 4, 26, 152, 241, 56, 80, 222, 122, 197, 63, 216, 0, 119, 16, 149, 175, 252, 220, 176, 234, 76, 214,
144, 207, 189, 39, 214, 187, 85, 103, 15, 98, 196, 14, 87, 121, 20, 175, 195, 224, 213, 212, 205, 27, 79, 108, 25, 48, 164, 167, 194, 246,
47, 67, 234, 175, 255, 114, 115, 201, 95, 141, 198, 238, 255, 100, 158, 155, 191, 15, 212, 240, 250, 137, 90, 189, 174, 209, 113, 174, 56, 109,
179, 26, 201, 54, 225, 110, 124, 17, 8, 14, 178, 235, 41, 207, 130, 10, 252, 129, 52, 157, 151, 135, 157, 158, 30, 156, 182, 171, 34, 191,
230, 18, 225, 57, 174, 153, 219, 147, 28, 10, 115, 93, 124, 36, 253, 38, 240, 158, 159, 130, 223, 40, 120, 43, 20, 30, 246, 175, 109, 18,
149, 6, 241, 51, 60, 42, 45, 98, 45, 42, 26, 11, 10, 198, 247, 245, 48, 212, 21, 64, 171, 131, 19, 11, 166, 38, 211, 13, 88, 251,
209, 160, 54, 11, 144, 27, 132, 127, 163, 83, 219, 151, 34, 220, 227, 89, 70, 163, 21, 185, 250, 115, 66, 164, 105, 117, 137, 11, 83, 235,
97, 124, 166, 26, 67, 93, 53, 9, 193, 110, 177, 127, 7, 196, 200, 25, 83, 15, 225, 224, 147, 250, 57, 223, 92, 183, 202, 235, 181, 234,
144, 202, 234, 26, 156, 154, 20, 232, 142, 182, 97, 158, 13, 35, 194, 178, 171, 168, 158, 126, 157, 65, 29, 123, 49, 229, 150, 165, 226, 65,
158, 252, 124, 99, 100, 248, 104, 213, 152, 82, 212, 224, 47, 207, 118, 242, 87, 216, 6, 199, 57, 249, 16, 1, 238, 127, 193, 2, 207, 46,
98, 21, 239, 188, 147, 165, 30, 245, 172, 254, 128, 58, 175, 122, 71, 31, 70, 186, 102, 31, 103, 223, 105, 240, 162, 71, 134, 118, 229, 74,
68, 207, 148, 221, 129, 28, 210, 192, 249, 124, 45, 141, 142, 67, 12, 42, 19, 212, 213, 27, 133, 67, 231, 23, 8, 129, 28, 34, 210, 212,
40, 146, 153, 154, 32, 172, 249, 204, 132, 110, 86, 110, 2, 183, 47, 104, 225, 70, 255, 46, 203, 145, 187, 187, 109, 39, 192, 206, 11, 246,
221, 219, 93, 25, 153, 137, 226, 3, 186, 178, 59, 234, 199, 195, 95, 65, 33, 226, 108, 170, 151, 233, 66, 125, 68, 29, 226, 128, 152, 207,
22, 73, 7, 19, 59, 84, 159, 226, 31, 142, 61, 55, 105, 157, 148, 255, 86, 1, 156, 111, 99, 106, 73, 164, 241, 171, 216, 161, 185, 47,
88, 2, 116, 64, 119, 213, 4, 18, 27, 138, 152, 39, 214, 64, 169, 175, 41, 207, 44, 72, 222, 244, 26, 12, 164, 218, 205, 194, 36, 203,
238, 38, 123, 221, 155, 40, 229, 47, 105, 141, 32, 55, 8, 236, 184, 56, 161, 246, 92, 194, 77, 50, 5, 254, 171, 189, 37, 224, 51, 227,
74, 18, 250, 56, 12, 184, 121, 226, 237, 138, 43, 147, 146, 240, 71, 136, 23, 90, 87, 62, 171, 25, 171, 69, 157, 83, 124, 68, 167, 161,
6, 147, 19, 125, 132, 100, 191, 152, 81, 20, 162, 231, 250, 136, 138, 121, 229, 96, 251, 165, 89, 99, 99, 54, 28, 62, 132, 82, 122, 133,
54, 211, 126, 188, 125, 177, 70, 32, 32, 89, 48, 107, 222, 19, 32, 120, 97, 221, 198, 155, 55, 205, 4
};
        static ShaderVariables[] variants;
        private static bool iscompiled = false;
        private static int GetIndex(ShaderFeatures features)
        {
            ShaderFeatures masked = (features & ((ShaderFeatures)(23)));
            if ((masked == ((ShaderFeatures)(1))))
            {
                return 1;
            }
            if ((masked == ((ShaderFeatures)(16))))
            {
                return 2;
            }
            if ((masked == ((ShaderFeatures)(17))))
            {
                return 3;
            }
            if ((masked == ((ShaderFeatures)(2))))
            {
                return 4;
            }
            if ((masked == ((ShaderFeatures)(3))))
            {
                return 5;
            }
            if ((masked == ((ShaderFeatures)(18))))
            {
                return 6;
            }
            if ((masked == ((ShaderFeatures)(19))))
            {
                return 7;
            }
            if ((masked == ((ShaderFeatures)(4))))
            {
                return 8;
            }
            if ((masked == ((ShaderFeatures)(5))))
            {
                return 9;
            }
            if ((masked == ((ShaderFeatures)(20))))
            {
                return 10;
            }
            if ((masked == ((ShaderFeatures)(21))))
            {
                return 11;
            }
            if ((masked == ((ShaderFeatures)(6))))
            {
                return 12;
            }
            if ((masked == ((ShaderFeatures)(7))))
            {
                return 13;
            }
            if ((masked == ((ShaderFeatures)(22))))
            {
                return 14;
            }
            if ((masked == ((ShaderFeatures)(23))))
            {
                return 15;
            }
            return 0;
        }
        public static ShaderVariables Get(ShaderFeatures features)
        {
            return variants[GetIndex(features)];
        }
        public static ShaderVariables Get()
        {
            return variants[0];
        }
        public static void Compile()
        {
            if (iscompiled)
            {
                return;
            }
            iscompiled = true;
            ShaderVariables.Log("Compiling Basic_PositionColor");
            string vertsrc;
            string fragsrc;
            vertsrc = ShCompHelper.FromArray(vertex_bytes);
            fragsrc = ShCompHelper.FromArray(fragment_bytes);
            variants = new ShaderVariables[16];
            variants[0] = ShaderVariables.Compile(vertsrc, fragsrc, "");
            variants[1] = ShaderVariables.Compile(vertsrc, fragsrc, "\n#define ALPHATEST_ENABLED\n#line 1\n");
            variants[2] = ShaderVariables.Compile(vertsrc, fragsrc, "\n#define VERTEX_LIGHTING\n#line 1\n");
            variants[3] = ShaderVariables.Compile(vertsrc, fragsrc, "\n#define ALPHATEST_ENABLED\n#define VERTEX_LIGHTING\n#line 1\n");
            variants[4] = ShaderVariables.Compile(vertsrc, fragsrc, "\n#define ET_ENABLED\n#line 1\n");
            variants[5] = ShaderVariables.Compile(vertsrc, fragsrc, "\n#define ALPHATEST_ENABLED\n#define ET_ENABLED\n#line 1\n");
            variants[6] = ShaderVariables.Compile(vertsrc, fragsrc, "\n#define VERTEX_LIGHTING\n#define ET_ENABLED\n#line 1\n");
            variants[7] = ShaderVariables.Compile(vertsrc, fragsrc, "\n#define ALPHATEST_ENABLED\n#define VERTEX_LIGHTING\n#define ET_ENABLED\n#line 1\n");
            variants[8] = ShaderVariables.Compile(vertsrc, fragsrc, "\n#define FADE_ENABLED\n#line 1\n");
            variants[9] = ShaderVariables.Compile(vertsrc, fragsrc, "\n#define ALPHATEST_ENABLED\n#define FADE_ENABLED\n#line 1\n");
            variants[10] = ShaderVariables.Compile(vertsrc, fragsrc, "\n#define VERTEX_LIGHTING\n#define FADE_ENABLED\n#line 1\n");
            variants[11] = ShaderVariables.Compile(vertsrc, fragsrc, "\n#define ALPHATEST_ENABLED\n#define VERTEX_LIGHTING\n#define FADE_ENABLED\n#line 1\n");
            variants[12] = ShaderVariables.Compile(vertsrc, fragsrc, "\n#define ET_ENABLED\n#define FADE_ENABLED\n#line 1\n");
            variants[13] = ShaderVariables.Compile(vertsrc, fragsrc, "\n#define ALPHATEST_ENABLED\n#define ET_ENABLED\n#define FADE_ENABLED\n#line 1\n");
            variants[14] = ShaderVariables.Compile(vertsrc, fragsrc, "\n#define VERTEX_LIGHTING\n#define ET_ENABLED\n#define FADE_ENABLED\n#line 1\n");
            variants[15] = ShaderVariables.Compile(vertsrc, fragsrc, "\n#define ALPHATEST_ENABLED\n#define VERTEX_LIGHTING\n#define ET_ENABLED\n#define FAD" +
                    "E_ENABLED\n#line 1\n");
        }
    }
}
