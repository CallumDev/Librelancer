#!/bin/bash
# Create fully-contained app bundle for OSX
# Depends on: 	mpv.app being present in the assets folder
#				sdl2 being installed in homebrew
#				freetype being installed in homebrew
# Things that'll probably change between MonoDevelop version
# SharpDX pulls in System.Windows.Forms and System.Drawing which pull in a bunch of useless files
EXTRANEOUS_FILES="libpixman* \
libcairo* \
libgio* \
libsqlite* \
libglib* \
libfreetype* \
libtiff* \
libgdiplus* \
libjpeg* \
libfontconfig* \
libgobject* \
libpng* \
libexpat* \
libgdk* \
libffi* \
libgif* \
libgmodule*
System.Windows.Forms.dll
System.Drawing.dll
Mono.WebBrowser.dll"

# Check dependencies
if [ ! -d "/Library" ]; then
	echo "Error: This script may only be ran on OSX"
	exit 1
fi

if [ ! -d "/Library/Frameworks/Mono.framework" ]; then
	echo "Error: Mono framework is required to build"
	exit 1
fi

if [ ! -d "/Library/Frameworks/Xamarin.Mac.framework" ]; then
	echo "Error: Xamarin.Mac is required to build"
	exit 1
fi

if [ ! -d "./assets/mpv.app" ]; then
  echo "Error: assets/mpv.app does not exist! Build using ./mpv_minimal or include your own"
  exit 1
fi

if [ ! -f "/usr/local/lib/libSDL2.dylib" ]; then
  echo "Error: /usr/local/lib/libSDL2.dylib does not exist! Install it with: brew install sdl2"
  exit 1
fi

if [ ! -f "/usr/local/lib/libfreetype.6.dylib" ]; then
  echo "Error: /usr/local/lib/libfreetype.6.dylib does not exist! Install it with: brew install freetype"
  exit 1
fi
# Build project in Release mode
cd ../src
/Library/Frameworks/Mono.framework/Versions/Current/bin/xbuild /p:Configuration="Release"
cd ../packaging
# Copy output
echo Copying app bundle from xbuild
mkdir -p ./packages
rm -rf ./packages/Librelancer.app
cp -r ../bin/Release/Launcher.Mac.app ./packages/Librelancer.app
function generate_icon_size {
	/Applications/Inkscape.app/Contents/Resources/bin/inkscape -z -e $PWD/icons.iconset/icon_$3.png -w $1 -h $2 $PWD/assets/icon.svg
}
# Embed icon
if [ -f "./assets/icons.icns" ]; then
	echo Copying ./assets/icons.icns
	cp ./assets/icons.icns ./packages/Librelancer.app/Resources/AppIcons.icns
elif [ -f "./assets/icon.svg" ]; then
	INKSCAPE=`which inkscape`
	if [ ! -f "$INKSCAPE" ]; then
		if [ -f "/Applications/Inkscape.app/Contents/Resources/bin/Inkscape" ]; then
			INKSCAPE="/Applications/Inkscape.app/Contents/Resources/bin/Inkscape"
		fi
	fi
	if [ -f "$INKSCAPE" ]; then
		echo Converting ./assets/icon.svg to .icns
		echo Using $INKSCAPE
		mkdir icons.iconset
		generate_icon_size 16 16 16x16
		generate_icon_size 32 32 16x16@2x
		generate_icon_size 32 32 32x32
		generate_icon_size 64 64 32x32@2x
		generate_icon_size 128 128 128x128
		generate_icon_size 256 256 128x128@2x
		generate_icon_size 256 256 256x256
		generate_icon_size 512 512 256x256@2x
		generate_icon_size 512 512 512x512
		generate_icon_size 1024 1024 512x512@2x
		iconutil -c icns icons.iconset
		echo Replacing icon
		cp icons.icns ./packages/Librelancer.app/Contents/Resources/AppIcons.icns
		rm icons.icns
		rm -rf icons.iconset
	else
		echo Inkscape is not installed, skipping icon step.
		echo Install inkscape with brew install homebrew/gui/inkscape
		echo Or place an install in /Applications/Inkscape.app
	fi
else
	echo No icon files exist to copy
fi
# Remove extraneous files
echo Removing extra files from bundle
cd ./packages/Librelancer.app/Contents/MonoBundle
set -x
rm $EXTRANEOUS_FILES
set +x
cd ../../../../
# MPV
echo Embedding mpv
mkdir -p ./packages/Librelancer.app/Contents/MacOS/mpv
cp -r ./assets/mpv.app/Contents/MacOS/* ./packages/Librelancer.app/Contents/MacOS/mpv/.
# SDL2
echo Installing SDL2
cp /usr/local/lib/libSDL2.dylib ./packages/Librelancer.app/Contents/MacOS/libSDL2-2.0.0.dylib
cd ./packages/Librelancer.app/Contents/MacOS/
chmod gu+w libSDL2-2.0.0.dylib
install_name_tool -change "/usr/local/opt/sdl2/lib/libSDL2-2.0.0.dylib" "@executable_path/libSDL2.dylib" libSDL2-2.0.0.dylib
ln -s libSDL2-2.0.0.dylib libSDL2.dylib 
cd ../../../../
# Freetype
echo Installing Freetype
freetype_lib=./packages/Librelancer.app/Contents/MacOS/libfreetype.6.dylib
cp /usr/local/lib/libfreetype.6.dylib $freetype_lib
chmod gu+w $freetype_lib
install_name_tool -change "/usr/local/opt/freetype/lib/libfreetype.6.dylib" "@executable_path/libfreetype.6.dylib" $freetype_lib
#Get libpng path from otool
libpng_path=$(otool -L $freetype_lib | grep libpng | sed -e  's/([^()]*)//g' | tr -d '[[:space:]]')
libpng_file=$(basename "$libpng_path")
echo "Installing dependency libpng from $libpng_path"
cp "$libpng_path" ./packages/Librelancer.app/Contents/MacOS/$libpng_file
chmod gu+w ./packages/Librelancer.app/Contents/MacOS/$libpng_file
install_name_tool -change "$libpng_path" "@executable_path/$libpng_file" ./packages/Librelancer.app/Contents/MacOS/$libpng_file
install_name_tool -change "$libpng_path" "@executable_path/$libpng_file" $freetype_lib
# Config files for release bundle
echo Generating config
echo '<bundlecfg><mpv>Contents/MacOS/mpv/mpv</mpv></bundlecfg>' > ./packages/Librelancer.app/Contents/Resources/bundlecfg.xml
mv ./packages/Librelancer.app/Contents/MacOS/Launcher.Mac ./packages/Librelancer.app/Contents/MacOS/Launcher.Mac.bin
cat <<'EOF' > ./packages/Librelancer.app/Contents/MacOS/Launcher.Mac
#!/bin/bash
dir=$(cd -P -- "$(dirname -- "$0")" && pwd -P)
cd $dir
DYLD_LIBRARY_PATH="$(pwd):$(pwd)/mpv/lib" ./Launcher.Mac.bin
EOF
chmod +x ./packages/Librelancer.app/Contents/MacOS/Launcher.Mac
echo App bundle ready